data
stack:      .space 8          # Espaço para a pilha (dois valores de 32 bits)

.text
.globl main

main:
    # Inicializar os registradores
    li $t0, 0        # Registrador para rastrear o topo da pilha
    li $t1, 10       # Primeiro valor a ser empilhado
    li $t2, 20       # Segundo valor a ser empilhado

    # Empilhar os valores na pilha
    sw $t1, ($t0)    # Armazenar o primeiro valor na posição do topo
    addi $t0, $t0, -4 # Decrementar o topo para a próxima posição
    sw $t2, ($t0)    # Armazenar o segundo valor na nova posição do topo

    # Retirar os valores da pilha
    lw $t3, ($t0)    # Carregar o segundo valor da pilha
    addi $t0, $t0, 4 # Incrementar o topo para acessar o próximo valor
    lw $t4, ($t0)    # Carregar o primeiro valor da pilha

    # Encerrar o programa
    li $v0, 10       # Código de serviço para sair
    syscall
